---

interface Props {
	title?: string;
	subtitle?: string;
	mode?: string;
}

const { title, subtitle, mode = 'plain' } = Astro.props;

const hasDefault = Astro.slots.has("default");
const hasFooter = Astro.slots.has("footer");

---

<div class="card">
	{ (title || subtitle) &&
		<div class="card-header">
			{ title && <div class="card-header__title" set:text={title} /> }
			{ subtitle && <div class="card-header__subtitle" set:text={subtitle} /> }
		</div>
	}

	{ hasDefault &&
		<div class={`card-content-${mode}`}>
			<slot />
		</div>
	}

	{ hasFooter &&
		<div class="card-footer">
			<slot name="footer" />
		</div>
	}
</div>

<script>

</script>

<style lang="scss">

.card {
	background: #C6C6C6;
	border: 2px solid #373737;
	box-shadow: var(--x-box-shadow);
	padding: 1rem;
	border-radius: 4px;
	position: relative;

	margin-bottom: 1.6rem;

	&-header {
		margin-top: -6px;
    margin-inline: 2px;
    display: flex;
    justify-content: center;
    flex-direction: column;
    text-align: left;
    font-optical-sizing: auto;
    user-select: none;

		&__title {
			color: #3F3F3F;
			font-size: 1.6rem;

			white-space: pre-line;
			word-wrap: break-word;
			word-break: break-word;
			font-weight: 400;
			line-height: calc(1.6 * 1em);
		}
	}

	&-content-plain {
    background: #373737;
    border: 2px solid;
    border-color: #000000 #8b8b8b #8b8b8b #000000;
    padding: 1rem;
	}

	&-content-blank { }

	&-footer {
		margin-top: .6rem;
	}
}

</style>
