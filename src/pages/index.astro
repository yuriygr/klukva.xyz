---
import { getCollection } from 'astro:content';

import Landing from '@layouts/Landing.astro';
import Logo from '@components/Logo.astro';

import { Card, CardSeparator, Button, ButtonsGroup, Placeholder, PlaceholderLoading } from '@components/mc';
import { ServerAddress } from '@components/server';
import { WorldItem, BuildingItem, NewsItem, ModItem, HelpItem } from '@components/items';

import ListOfPlayers from '@components/ListOfPlayers.vue';
import Spacer from '@components/Spacer.astro';

const address = import.meta.env.SERVER_ADDRESS
const discord = import.meta.env.DISCORD_ADRESS

const allWorlds = (await getCollection("worlds")).sort(
  (a, b) => Number(a.data.sort_order) - Number(b.data.sort_order)
);
const allPlugins = (await getCollection("plugins")).sort(
  (a, b) => Number(a.data.sort_order) - Number(b.data.sort_order)
);
const allNews = (await getCollection("news")).sort(
  (a, b) => Date.parse(b.data.date.toString()) - Date.parse(a.data.date.toString())
);
const allBuildings = (await getCollection("buildings")).sort(
  (a, b) => Date.parse(b.data.date.toString()) - Date.parse(a.data.date.toString())
);
const allHelps = (await getCollection("help")).sort(
  (a, b) => Number(a.data.sort_order) - Number(b.data.sort_order)
);

---

<Landing page_title='Наш маленький кислый сервер <3'>

	<Logo maxWidth={350} />

	<Spacer />

	<Card mode="blank">
		<ServerAddress address={address} />

		<ButtonsGroup slot="footer">
			<Button stretched={true} component="a" href={discord} target="_blank">Discord</Button>
		</ButtonsGroup>
	</Card>

	<Card title="Доступные миры">
		{ allWorlds.map((item, index, array) => (
			<>
				<WorldItem {item} />
				{ (++index != array.length) && <CardSeparator /> }
			</>
		)) }
	</Card>

	<Card title="Список активных игроков">
		<ListOfPlayers client:load address={address}>
			<PlaceholderLoading slot="loading" />
			<Placeholder slot="offline">Сервер оффлайн :(</Placeholder>
			<Placeholder slot="no_players">На сервере никого нет :(</Placeholder>
		</ListOfPlayers>
	</Card>

	<Card title="Рекомендуемые моды">
		{ allPlugins.map((item, index, array) => (
			<>
				<ModItem {item} />
				{ (++index != array.length) && <CardSeparator /> }
			</>
		)) }

		<ButtonsGroup slot="footer">
			<Button stretched={true} component="a" href="https://modrinth.com/collection/pDf8krcz" target="_blank">Посмотреть</Button>
			<Button stretched={true} component="a" href="mods.zip" target="_blank" download="mods">Скачать</Button>
		</ButtonsGroup>
	</Card>

	<Card title="Последние новости">
		{ allNews.map((item, index, array) => (
			<>
				<NewsItem {item} />
				{ (++index != array.length) && <CardSeparator /> }
			</>
		)) }

		<ButtonsGroup slot="footer">
			<Button stretched={true} component="a" href="/news/">Все новости</Button>
		</ButtonsGroup>
	</Card>

	<Card title="Постройки">
		{ allBuildings.map((item, index, array) => (
			<>
				<BuildingItem {item} />
				{ (++index != array.length) && <CardSeparator /> }
			</>
		)) }
		
		<ButtonsGroup slot="footer">
			<Button stretched={true} component="a" href="/buildings/">Все постройки</Button>
		</ButtonsGroup>
	</Card>

	<Card title="Помощь">
		{ allHelps.map((item, index, array) => (
			<>
				<HelpItem {item} />
				{ (++index != array.length) && <CardSeparator /> }
			</>
		)) }
	</Card>

	<Card title="Проголосовать за сервер">
		<ButtonsGroup>
			<Button stretched={true} component="a" href="https://hotmc.ru/minecraft-server-268678" target="_blank">HOTMC</Button>
			<Button stretched={true} component="a" href="https://mineserv.top/klukva" target="_blank">MineServ.top</Button>
		</ButtonsGroup>
	</Card>

	<Spacer />

</Landing>

<style>

</style>
